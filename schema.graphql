# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  name: String
  email: String
  password: PasswordState
  posts(where: PostWhereInput! = {}, orderBy: [PostOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PostWhereUniqueInput): [Post!]
  postsCount(where: PostWhereInput! = {}): Int
  createdAt: DateTime
}

type PasswordState {
  isSet: Boolean!
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
  posts: PostManyRelationFilter
  createdAt: DateTimeNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input PostManyRelationFilter {
  every: PostWhereInput
  some: PostWhereInput
  none: PostWhereInput
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
  createdAt: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  posts: PostRelateToManyForUpdateInput
  createdAt: DateTime
}

input PostRelateToManyForUpdateInput {
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  create: [PostCreateInput!]
  connect: [PostWhereUniqueInput!]
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  email: String
  password: String
  posts: PostRelateToManyForCreateInput
  createdAt: DateTime
}

input PostRelateToManyForCreateInput {
  create: [PostCreateInput!]
  connect: [PostWhereUniqueInput!]
}

type Post {
  id: ID!
  title: String
  content: String
  author: User
}

input PostWhereUniqueInput {
  id: ID
}

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
  id: IDFilter
  title: StringFilter
  content: StringFilter
  author: UserWhereInput
}

input PostOrderByInput {
  id: OrderDirection
  title: OrderDirection
  content: OrderDirection
}

input PostUpdateInput {
  title: String
  content: String
  author: UserRelateToOneForUpdateInput
}

input UserRelateToOneForUpdateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
}

input PostUpdateArgs {
  where: PostWhereUniqueInput!
  data: PostUpdateInput!
}

input PostCreateInput {
  title: String
  content: String
  author: UserRelateToOneForCreateInput
}

input UserRelateToOneForCreateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

type Project {
  id: ID!
  title: String
  description: String
  slug: String
  requestCallbackText: String
  headerLogo: FileFieldOutput
  bannerImage: FileFieldOutput
  projectLogo: FileFieldOutput
  developerLogo: FileFieldOutput
  startingPrice: String
  paymentPlan: String
  area: String
  handoverDate: String
  projectTag1: String
  projectTag2: String
  paymentStructure: String
  downPayment: String
  developerName: String
  bedrooms: String
  numberOfUnits: String
  aboutHeading: String
  aboutDescription: String
  featurePrice: String
  featureDownPayment: String
  featureHandoverDate: String
  availabilityButtonText: String
  brochureButtonText: String
  galleryImages(where: GalleryImageWhereInput! = {}, orderBy: [GalleryImageOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: GalleryImageWhereUniqueInput): [GalleryImage!]
  galleryImagesCount(where: GalleryImageWhereInput! = {}): Int
  videoUrl: String
  agentName: String
  agentOccupation: String
  agentPhone: String
  agentPhoto: FileFieldOutput
  contactFormHeaderText: String
  contactFormBoldText: String
  fullwidthImage: FileFieldOutput
  amenitiesImage: FileFieldOutput
  locationTitle: String
  locationDescription: String
  locationItems(where: LocationItemWhereInput! = {}, orderBy: [LocationItemOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: LocationItemWhereUniqueInput): [LocationItem!]
  locationItemsCount(where: LocationItemWhereInput! = {}): Int
  latitude: String
  longitude: String
  generalPlanTag: String
  generalPlanTitle: String
  generalPlanImage: FileFieldOutput
  floorPlans(where: FloorPlanWhereInput! = {}, orderBy: [FloorPlanOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: FloorPlanWhereUniqueInput): [FloorPlan!]
  floorPlansCount(where: FloorPlanWhereInput! = {}): Int
  paymentPlanHeading: String
  paymentPlanValue: String
  downPaymentFinancial: String
  installments: String
  completion: String
  developerHeadingTag: String
  developerHeadingTitle: String
  developerContent1: String
  developerContent2: String
  developerVideoUrl: String
  materials(where: MaterialWhereInput! = {}, orderBy: [MaterialOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MaterialWhereUniqueInput): [Material!]
  materialsCount(where: MaterialWhereInput! = {}): Int
  faqs(where: FAQWhereInput! = {}, orderBy: [FAQOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: FAQWhereUniqueInput): [FAQ!]
  faqsCount(where: FAQWhereInput! = {}): Int
  contact2HeadingTag: String
  contact2Title: String
  contact2Name: String
  contact2Occupation: String
  contact2PhoneNumber: String
  contact2EmailAddress: String
  contact2Website: String
  contact2CompanyLogo: FileFieldOutput
  contact2Image: FileFieldOutput
  similarProjects(where: SimilarProjectWhereInput! = {}, orderBy: [SimilarProjectOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SimilarProjectWhereUniqueInput): [SimilarProject!]
  similarProjectsCount(where: SimilarProjectWhereInput! = {}): Int
  footerText: String
  privacyLink: String
  termsLink: String
  sitemapLink: String
  companyDetailsLink: String
  languageText: String
  currencyText: String
  facebookLink: String
  twitterLink: String
  instagramLink: String
  callbackRequests(where: CallbackRequestWhereInput! = {}, orderBy: [CallbackRequestOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CallbackRequestWhereUniqueInput): [CallbackRequest!]
  callbackRequestsCount(where: CallbackRequestWhereInput! = {}): Int
}

type FileFieldOutput {
  filename: String!
  filesize: Int!
  url: String!
}

input ProjectWhereUniqueInput {
  id: ID
  slug: String
}

input ProjectWhereInput {
  AND: [ProjectWhereInput!]
  OR: [ProjectWhereInput!]
  NOT: [ProjectWhereInput!]
  id: IDFilter
  title: StringFilter
  description: StringFilter
  slug: StringFilter
  requestCallbackText: StringFilter
  startingPrice: StringFilter
  paymentPlan: StringFilter
  area: StringFilter
  handoverDate: StringFilter
  projectTag1: StringFilter
  projectTag2: StringFilter
  paymentStructure: StringFilter
  downPayment: StringFilter
  developerName: StringFilter
  bedrooms: StringFilter
  numberOfUnits: StringFilter
  aboutHeading: StringFilter
  aboutDescription: StringFilter
  featurePrice: StringFilter
  featureDownPayment: StringFilter
  featureHandoverDate: StringFilter
  availabilityButtonText: StringFilter
  brochureButtonText: StringFilter
  galleryImages: GalleryImageManyRelationFilter
  videoUrl: StringFilter
  agentName: StringFilter
  agentOccupation: StringFilter
  agentPhone: StringFilter
  contactFormHeaderText: StringFilter
  contactFormBoldText: StringFilter
  locationTitle: StringFilter
  locationDescription: StringFilter
  locationItems: LocationItemManyRelationFilter
  latitude: StringFilter
  longitude: StringFilter
  generalPlanTag: StringFilter
  generalPlanTitle: StringFilter
  floorPlans: FloorPlanManyRelationFilter
  paymentPlanHeading: StringFilter
  paymentPlanValue: StringFilter
  downPaymentFinancial: StringFilter
  installments: StringFilter
  completion: StringFilter
  developerHeadingTag: StringFilter
  developerHeadingTitle: StringFilter
  developerContent1: StringFilter
  developerContent2: StringFilter
  developerVideoUrl: StringFilter
  materials: MaterialManyRelationFilter
  faqs: FAQManyRelationFilter
  contact2HeadingTag: StringFilter
  contact2Title: StringFilter
  contact2Name: StringFilter
  contact2Occupation: StringFilter
  contact2PhoneNumber: StringFilter
  contact2EmailAddress: StringFilter
  contact2Website: StringFilter
  similarProjects: SimilarProjectManyRelationFilter
  footerText: StringFilter
  privacyLink: StringFilter
  termsLink: StringFilter
  sitemapLink: StringFilter
  companyDetailsLink: StringFilter
  languageText: StringFilter
  currencyText: StringFilter
  facebookLink: StringFilter
  twitterLink: StringFilter
  instagramLink: StringFilter
  callbackRequests: CallbackRequestManyRelationFilter
}

input GalleryImageManyRelationFilter {
  every: GalleryImageWhereInput
  some: GalleryImageWhereInput
  none: GalleryImageWhereInput
}

input LocationItemManyRelationFilter {
  every: LocationItemWhereInput
  some: LocationItemWhereInput
  none: LocationItemWhereInput
}

input FloorPlanManyRelationFilter {
  every: FloorPlanWhereInput
  some: FloorPlanWhereInput
  none: FloorPlanWhereInput
}

input MaterialManyRelationFilter {
  every: MaterialWhereInput
  some: MaterialWhereInput
  none: MaterialWhereInput
}

input FAQManyRelationFilter {
  every: FAQWhereInput
  some: FAQWhereInput
  none: FAQWhereInput
}

input SimilarProjectManyRelationFilter {
  every: SimilarProjectWhereInput
  some: SimilarProjectWhereInput
  none: SimilarProjectWhereInput
}

input CallbackRequestManyRelationFilter {
  every: CallbackRequestWhereInput
  some: CallbackRequestWhereInput
  none: CallbackRequestWhereInput
}

input ProjectOrderByInput {
  id: OrderDirection
  title: OrderDirection
  description: OrderDirection
  slug: OrderDirection
  requestCallbackText: OrderDirection
  startingPrice: OrderDirection
  paymentPlan: OrderDirection
  area: OrderDirection
  handoverDate: OrderDirection
  projectTag1: OrderDirection
  projectTag2: OrderDirection
  paymentStructure: OrderDirection
  downPayment: OrderDirection
  developerName: OrderDirection
  bedrooms: OrderDirection
  numberOfUnits: OrderDirection
  aboutHeading: OrderDirection
  aboutDescription: OrderDirection
  featurePrice: OrderDirection
  featureDownPayment: OrderDirection
  featureHandoverDate: OrderDirection
  availabilityButtonText: OrderDirection
  brochureButtonText: OrderDirection
  videoUrl: OrderDirection
  agentName: OrderDirection
  agentOccupation: OrderDirection
  agentPhone: OrderDirection
  contactFormHeaderText: OrderDirection
  contactFormBoldText: OrderDirection
  locationTitle: OrderDirection
  locationDescription: OrderDirection
  latitude: OrderDirection
  longitude: OrderDirection
  generalPlanTag: OrderDirection
  generalPlanTitle: OrderDirection
  paymentPlanHeading: OrderDirection
  paymentPlanValue: OrderDirection
  downPaymentFinancial: OrderDirection
  installments: OrderDirection
  completion: OrderDirection
  developerHeadingTag: OrderDirection
  developerHeadingTitle: OrderDirection
  developerContent1: OrderDirection
  developerContent2: OrderDirection
  developerVideoUrl: OrderDirection
  contact2HeadingTag: OrderDirection
  contact2Title: OrderDirection
  contact2Name: OrderDirection
  contact2Occupation: OrderDirection
  contact2PhoneNumber: OrderDirection
  contact2EmailAddress: OrderDirection
  contact2Website: OrderDirection
  footerText: OrderDirection
  privacyLink: OrderDirection
  termsLink: OrderDirection
  sitemapLink: OrderDirection
  companyDetailsLink: OrderDirection
  languageText: OrderDirection
  currencyText: OrderDirection
  facebookLink: OrderDirection
  twitterLink: OrderDirection
  instagramLink: OrderDirection
}

input ProjectUpdateInput {
  title: String
  description: String
  slug: String
  requestCallbackText: String
  headerLogo: FileFieldInput
  bannerImage: FileFieldInput
  projectLogo: FileFieldInput
  developerLogo: FileFieldInput
  startingPrice: String
  paymentPlan: String
  area: String
  handoverDate: String
  projectTag1: String
  projectTag2: String
  paymentStructure: String
  downPayment: String
  developerName: String
  bedrooms: String
  numberOfUnits: String
  aboutHeading: String
  aboutDescription: String
  featurePrice: String
  featureDownPayment: String
  featureHandoverDate: String
  availabilityButtonText: String
  brochureButtonText: String
  galleryImages: GalleryImageRelateToManyForUpdateInput
  videoUrl: String
  agentName: String
  agentOccupation: String
  agentPhone: String
  agentPhoto: FileFieldInput
  contactFormHeaderText: String
  contactFormBoldText: String
  fullwidthImage: FileFieldInput
  amenitiesImage: FileFieldInput
  locationTitle: String
  locationDescription: String
  locationItems: LocationItemRelateToManyForUpdateInput
  latitude: String
  longitude: String
  generalPlanTag: String
  generalPlanTitle: String
  generalPlanImage: FileFieldInput
  floorPlans: FloorPlanRelateToManyForUpdateInput
  paymentPlanHeading: String
  paymentPlanValue: String
  downPaymentFinancial: String
  installments: String
  completion: String
  developerHeadingTag: String
  developerHeadingTitle: String
  developerContent1: String
  developerContent2: String
  developerVideoUrl: String
  materials: MaterialRelateToManyForUpdateInput
  faqs: FAQRelateToManyForUpdateInput
  contact2HeadingTag: String
  contact2Title: String
  contact2Name: String
  contact2Occupation: String
  contact2PhoneNumber: String
  contact2EmailAddress: String
  contact2Website: String
  contact2CompanyLogo: FileFieldInput
  contact2Image: FileFieldInput
  similarProjects: SimilarProjectRelateToManyForUpdateInput
  footerText: String
  privacyLink: String
  termsLink: String
  sitemapLink: String
  companyDetailsLink: String
  languageText: String
  currencyText: String
  facebookLink: String
  twitterLink: String
  instagramLink: String
  callbackRequests: CallbackRequestRelateToManyForUpdateInput
}

input FileFieldInput {
  upload: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input GalleryImageRelateToManyForUpdateInput {
  disconnect: [GalleryImageWhereUniqueInput!]
  set: [GalleryImageWhereUniqueInput!]
  create: [GalleryImageCreateInput!]
  connect: [GalleryImageWhereUniqueInput!]
}

input LocationItemRelateToManyForUpdateInput {
  disconnect: [LocationItemWhereUniqueInput!]
  set: [LocationItemWhereUniqueInput!]
  create: [LocationItemCreateInput!]
  connect: [LocationItemWhereUniqueInput!]
}

input FloorPlanRelateToManyForUpdateInput {
  disconnect: [FloorPlanWhereUniqueInput!]
  set: [FloorPlanWhereUniqueInput!]
  create: [FloorPlanCreateInput!]
  connect: [FloorPlanWhereUniqueInput!]
}

input MaterialRelateToManyForUpdateInput {
  disconnect: [MaterialWhereUniqueInput!]
  set: [MaterialWhereUniqueInput!]
  create: [MaterialCreateInput!]
  connect: [MaterialWhereUniqueInput!]
}

input FAQRelateToManyForUpdateInput {
  disconnect: [FAQWhereUniqueInput!]
  set: [FAQWhereUniqueInput!]
  create: [FAQCreateInput!]
  connect: [FAQWhereUniqueInput!]
}

input SimilarProjectRelateToManyForUpdateInput {
  disconnect: [SimilarProjectWhereUniqueInput!]
  set: [SimilarProjectWhereUniqueInput!]
  create: [SimilarProjectCreateInput!]
  connect: [SimilarProjectWhereUniqueInput!]
}

input CallbackRequestRelateToManyForUpdateInput {
  disconnect: [CallbackRequestWhereUniqueInput!]
  set: [CallbackRequestWhereUniqueInput!]
  create: [CallbackRequestCreateInput!]
  connect: [CallbackRequestWhereUniqueInput!]
}

input ProjectUpdateArgs {
  where: ProjectWhereUniqueInput!
  data: ProjectUpdateInput!
}

input ProjectCreateInput {
  title: String
  description: String
  slug: String
  requestCallbackText: String
  headerLogo: FileFieldInput
  bannerImage: FileFieldInput
  projectLogo: FileFieldInput
  developerLogo: FileFieldInput
  startingPrice: String
  paymentPlan: String
  area: String
  handoverDate: String
  projectTag1: String
  projectTag2: String
  paymentStructure: String
  downPayment: String
  developerName: String
  bedrooms: String
  numberOfUnits: String
  aboutHeading: String
  aboutDescription: String
  featurePrice: String
  featureDownPayment: String
  featureHandoverDate: String
  availabilityButtonText: String
  brochureButtonText: String
  galleryImages: GalleryImageRelateToManyForCreateInput
  videoUrl: String
  agentName: String
  agentOccupation: String
  agentPhone: String
  agentPhoto: FileFieldInput
  contactFormHeaderText: String
  contactFormBoldText: String
  fullwidthImage: FileFieldInput
  amenitiesImage: FileFieldInput
  locationTitle: String
  locationDescription: String
  locationItems: LocationItemRelateToManyForCreateInput
  latitude: String
  longitude: String
  generalPlanTag: String
  generalPlanTitle: String
  generalPlanImage: FileFieldInput
  floorPlans: FloorPlanRelateToManyForCreateInput
  paymentPlanHeading: String
  paymentPlanValue: String
  downPaymentFinancial: String
  installments: String
  completion: String
  developerHeadingTag: String
  developerHeadingTitle: String
  developerContent1: String
  developerContent2: String
  developerVideoUrl: String
  materials: MaterialRelateToManyForCreateInput
  faqs: FAQRelateToManyForCreateInput
  contact2HeadingTag: String
  contact2Title: String
  contact2Name: String
  contact2Occupation: String
  contact2PhoneNumber: String
  contact2EmailAddress: String
  contact2Website: String
  contact2CompanyLogo: FileFieldInput
  contact2Image: FileFieldInput
  similarProjects: SimilarProjectRelateToManyForCreateInput
  footerText: String
  privacyLink: String
  termsLink: String
  sitemapLink: String
  companyDetailsLink: String
  languageText: String
  currencyText: String
  facebookLink: String
  twitterLink: String
  instagramLink: String
  callbackRequests: CallbackRequestRelateToManyForCreateInput
}

input GalleryImageRelateToManyForCreateInput {
  create: [GalleryImageCreateInput!]
  connect: [GalleryImageWhereUniqueInput!]
}

input LocationItemRelateToManyForCreateInput {
  create: [LocationItemCreateInput!]
  connect: [LocationItemWhereUniqueInput!]
}

input FloorPlanRelateToManyForCreateInput {
  create: [FloorPlanCreateInput!]
  connect: [FloorPlanWhereUniqueInput!]
}

input MaterialRelateToManyForCreateInput {
  create: [MaterialCreateInput!]
  connect: [MaterialWhereUniqueInput!]
}

input FAQRelateToManyForCreateInput {
  create: [FAQCreateInput!]
  connect: [FAQWhereUniqueInput!]
}

input SimilarProjectRelateToManyForCreateInput {
  create: [SimilarProjectCreateInput!]
  connect: [SimilarProjectWhereUniqueInput!]
}

input CallbackRequestRelateToManyForCreateInput {
  create: [CallbackRequestCreateInput!]
  connect: [CallbackRequestWhereUniqueInput!]
}

type GalleryImage {
  id: ID!
  image: FileFieldOutput
  project: Project
}

input GalleryImageWhereUniqueInput {
  id: ID
}

input GalleryImageWhereInput {
  AND: [GalleryImageWhereInput!]
  OR: [GalleryImageWhereInput!]
  NOT: [GalleryImageWhereInput!]
  id: IDFilter
  project: ProjectWhereInput
}

input GalleryImageOrderByInput {
  id: OrderDirection
}

input GalleryImageUpdateInput {
  image: FileFieldInput
  project: ProjectRelateToOneForUpdateInput
}

input ProjectRelateToOneForUpdateInput {
  create: ProjectCreateInput
  connect: ProjectWhereUniqueInput
  disconnect: Boolean
}

input GalleryImageUpdateArgs {
  where: GalleryImageWhereUniqueInput!
  data: GalleryImageUpdateInput!
}

input GalleryImageCreateInput {
  image: FileFieldInput
  project: ProjectRelateToOneForCreateInput
}

input ProjectRelateToOneForCreateInput {
  create: ProjectCreateInput
  connect: ProjectWhereUniqueInput
}

type LocationItem {
  id: ID!
  image: FileFieldOutput
  distance: String
  place: String
  project: Project
}

input LocationItemWhereUniqueInput {
  id: ID
}

input LocationItemWhereInput {
  AND: [LocationItemWhereInput!]
  OR: [LocationItemWhereInput!]
  NOT: [LocationItemWhereInput!]
  id: IDFilter
  distance: StringFilter
  place: StringFilter
  project: ProjectWhereInput
}

input LocationItemOrderByInput {
  id: OrderDirection
  distance: OrderDirection
  place: OrderDirection
}

input LocationItemUpdateInput {
  image: FileFieldInput
  distance: String
  place: String
  project: ProjectRelateToOneForUpdateInput
}

input LocationItemUpdateArgs {
  where: LocationItemWhereUniqueInput!
  data: LocationItemUpdateInput!
}

input LocationItemCreateInput {
  image: FileFieldInput
  distance: String
  place: String
  project: ProjectRelateToOneForCreateInput
}

type FloorPlan {
  id: ID!
  title: String
  type: String
  measurement: String
  image: FileFieldOutput
  floorPlanDocument: FileFieldOutput
  project: Project
}

input FloorPlanWhereUniqueInput {
  id: ID
}

input FloorPlanWhereInput {
  AND: [FloorPlanWhereInput!]
  OR: [FloorPlanWhereInput!]
  NOT: [FloorPlanWhereInput!]
  id: IDFilter
  title: StringFilter
  type: StringFilter
  measurement: StringFilter
  project: ProjectWhereInput
}

input FloorPlanOrderByInput {
  id: OrderDirection
  title: OrderDirection
  type: OrderDirection
  measurement: OrderDirection
}

input FloorPlanUpdateInput {
  title: String
  type: String
  measurement: String
  image: FileFieldInput
  floorPlanDocument: FileFieldInput
  project: ProjectRelateToOneForUpdateInput
}

input FloorPlanUpdateArgs {
  where: FloorPlanWhereUniqueInput!
  data: FloorPlanUpdateInput!
}

input FloorPlanCreateInput {
  title: String
  type: String
  measurement: String
  image: FileFieldInput
  floorPlanDocument: FileFieldInput
  project: ProjectRelateToOneForCreateInput
}

type Material {
  id: ID!
  title: String
  image: FileFieldOutput
  downloadLink: FileFieldOutput
  project: Project
}

input MaterialWhereUniqueInput {
  id: ID
}

input MaterialWhereInput {
  AND: [MaterialWhereInput!]
  OR: [MaterialWhereInput!]
  NOT: [MaterialWhereInput!]
  id: IDFilter
  title: StringFilter
  project: ProjectWhereInput
}

input MaterialOrderByInput {
  id: OrderDirection
  title: OrderDirection
}

input MaterialUpdateInput {
  title: String
  image: FileFieldInput
  downloadLink: FileFieldInput
  project: ProjectRelateToOneForUpdateInput
}

input MaterialUpdateArgs {
  where: MaterialWhereUniqueInput!
  data: MaterialUpdateInput!
}

input MaterialCreateInput {
  title: String
  image: FileFieldInput
  downloadLink: FileFieldInput
  project: ProjectRelateToOneForCreateInput
}

type FAQ {
  id: ID!
  question: String
  answer: String
  order: String
  project: Project
}

input FAQWhereUniqueInput {
  id: ID
}

input FAQWhereInput {
  AND: [FAQWhereInput!]
  OR: [FAQWhereInput!]
  NOT: [FAQWhereInput!]
  id: IDFilter
  question: StringFilter
  answer: StringFilter
  order: StringFilter
  project: ProjectWhereInput
}

input FAQOrderByInput {
  id: OrderDirection
  question: OrderDirection
  answer: OrderDirection
  order: OrderDirection
}

input FAQUpdateInput {
  question: String
  answer: String
  order: String
  project: ProjectRelateToOneForUpdateInput
}

input FAQUpdateArgs {
  where: FAQWhereUniqueInput!
  data: FAQUpdateInput!
}

input FAQCreateInput {
  question: String
  answer: String
  order: String
  project: ProjectRelateToOneForCreateInput
}

type SimilarProject {
  id: ID!
  similarProject_title: String
  similarProject_developer: String
  similarProject_handoverDate: String
  similarProject_link: String
  similarProject_image: FileFieldOutput
  project: Project
}

input SimilarProjectWhereUniqueInput {
  id: ID
}

input SimilarProjectWhereInput {
  AND: [SimilarProjectWhereInput!]
  OR: [SimilarProjectWhereInput!]
  NOT: [SimilarProjectWhereInput!]
  id: IDFilter
  similarProject_title: StringFilter
  similarProject_developer: StringFilter
  similarProject_handoverDate: StringFilter
  similarProject_link: StringFilter
  project: ProjectWhereInput
}

input SimilarProjectOrderByInput {
  id: OrderDirection
  similarProject_title: OrderDirection
  similarProject_developer: OrderDirection
  similarProject_handoverDate: OrderDirection
  similarProject_link: OrderDirection
}

input SimilarProjectUpdateInput {
  similarProject_title: String
  similarProject_developer: String
  similarProject_handoverDate: String
  similarProject_link: String
  similarProject_image: FileFieldInput
  project: ProjectRelateToOneForUpdateInput
}

input SimilarProjectUpdateArgs {
  where: SimilarProjectWhereUniqueInput!
  data: SimilarProjectUpdateInput!
}

input SimilarProjectCreateInput {
  similarProject_title: String
  similarProject_developer: String
  similarProject_handoverDate: String
  similarProject_link: String
  similarProject_image: FileFieldInput
  project: ProjectRelateToOneForCreateInput
}

type CallbackRequest {
  id: ID!
  name: String
  email: String
  phone: String
  project: Project
  createdAt: DateTime
}

input CallbackRequestWhereUniqueInput {
  id: ID
}

input CallbackRequestWhereInput {
  AND: [CallbackRequestWhereInput!]
  OR: [CallbackRequestWhereInput!]
  NOT: [CallbackRequestWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
  phone: StringFilter
  project: ProjectWhereInput
  createdAt: DateTimeNullableFilter
}

input CallbackRequestOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
  phone: OrderDirection
  createdAt: OrderDirection
}

input CallbackRequestUpdateInput {
  name: String
  email: String
  phone: String
  project: ProjectRelateToOneForUpdateInput
  createdAt: DateTime
}

input CallbackRequestUpdateArgs {
  where: CallbackRequestWhereUniqueInput!
  data: CallbackRequestUpdateInput!
}

input CallbackRequestCreateInput {
  name: String
  email: String
  phone: String
  project: ProjectRelateToOneForCreateInput
  createdAt: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createPost(data: PostCreateInput!): Post
  createPosts(data: [PostCreateInput!]!): [Post]
  updatePost(where: PostWhereUniqueInput!, data: PostUpdateInput!): Post
  updatePosts(data: [PostUpdateArgs!]!): [Post]
  deletePost(where: PostWhereUniqueInput!): Post
  deletePosts(where: [PostWhereUniqueInput!]!): [Post]
  createProject(data: ProjectCreateInput!): Project
  createProjects(data: [ProjectCreateInput!]!): [Project]
  updateProject(where: ProjectWhereUniqueInput!, data: ProjectUpdateInput!): Project
  updateProjects(data: [ProjectUpdateArgs!]!): [Project]
  deleteProject(where: ProjectWhereUniqueInput!): Project
  deleteProjects(where: [ProjectWhereUniqueInput!]!): [Project]
  createGalleryImage(data: GalleryImageCreateInput!): GalleryImage
  createGalleryImages(data: [GalleryImageCreateInput!]!): [GalleryImage]
  updateGalleryImage(where: GalleryImageWhereUniqueInput!, data: GalleryImageUpdateInput!): GalleryImage
  updateGalleryImages(data: [GalleryImageUpdateArgs!]!): [GalleryImage]
  deleteGalleryImage(where: GalleryImageWhereUniqueInput!): GalleryImage
  deleteGalleryImages(where: [GalleryImageWhereUniqueInput!]!): [GalleryImage]
  createLocationItem(data: LocationItemCreateInput!): LocationItem
  createLocationItems(data: [LocationItemCreateInput!]!): [LocationItem]
  updateLocationItem(where: LocationItemWhereUniqueInput!, data: LocationItemUpdateInput!): LocationItem
  updateLocationItems(data: [LocationItemUpdateArgs!]!): [LocationItem]
  deleteLocationItem(where: LocationItemWhereUniqueInput!): LocationItem
  deleteLocationItems(where: [LocationItemWhereUniqueInput!]!): [LocationItem]
  createFloorPlan(data: FloorPlanCreateInput!): FloorPlan
  createFloorPlans(data: [FloorPlanCreateInput!]!): [FloorPlan]
  updateFloorPlan(where: FloorPlanWhereUniqueInput!, data: FloorPlanUpdateInput!): FloorPlan
  updateFloorPlans(data: [FloorPlanUpdateArgs!]!): [FloorPlan]
  deleteFloorPlan(where: FloorPlanWhereUniqueInput!): FloorPlan
  deleteFloorPlans(where: [FloorPlanWhereUniqueInput!]!): [FloorPlan]
  createMaterial(data: MaterialCreateInput!): Material
  createMaterials(data: [MaterialCreateInput!]!): [Material]
  updateMaterial(where: MaterialWhereUniqueInput!, data: MaterialUpdateInput!): Material
  updateMaterials(data: [MaterialUpdateArgs!]!): [Material]
  deleteMaterial(where: MaterialWhereUniqueInput!): Material
  deleteMaterials(where: [MaterialWhereUniqueInput!]!): [Material]
  createFAQ(data: FAQCreateInput!): FAQ
  createFAQS(data: [FAQCreateInput!]!): [FAQ]
  updateFAQ(where: FAQWhereUniqueInput!, data: FAQUpdateInput!): FAQ
  updateFAQS(data: [FAQUpdateArgs!]!): [FAQ]
  deleteFAQ(where: FAQWhereUniqueInput!): FAQ
  deleteFAQS(where: [FAQWhereUniqueInput!]!): [FAQ]
  createSimilarProject(data: SimilarProjectCreateInput!): SimilarProject
  createSimilarProjects(data: [SimilarProjectCreateInput!]!): [SimilarProject]
  updateSimilarProject(where: SimilarProjectWhereUniqueInput!, data: SimilarProjectUpdateInput!): SimilarProject
  updateSimilarProjects(data: [SimilarProjectUpdateArgs!]!): [SimilarProject]
  deleteSimilarProject(where: SimilarProjectWhereUniqueInput!): SimilarProject
  deleteSimilarProjects(where: [SimilarProjectWhereUniqueInput!]!): [SimilarProject]
  createCallbackRequest(data: CallbackRequestCreateInput!): CallbackRequest
  createCallbackRequests(data: [CallbackRequestCreateInput!]!): [CallbackRequest]
  updateCallbackRequest(where: CallbackRequestWhereUniqueInput!, data: CallbackRequestUpdateInput!): CallbackRequest
  updateCallbackRequests(data: [CallbackRequestUpdateArgs!]!): [CallbackRequest]
  deleteCallbackRequest(where: CallbackRequestWhereUniqueInput!): CallbackRequest
  deleteCallbackRequests(where: [CallbackRequestWhereUniqueInput!]!): [CallbackRequest]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  usersCount(where: UserWhereInput! = {}): Int
  post(where: PostWhereUniqueInput!): Post
  posts(where: PostWhereInput! = {}, orderBy: [PostOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PostWhereUniqueInput): [Post!]
  postsCount(where: PostWhereInput! = {}): Int
  project(where: ProjectWhereUniqueInput!): Project
  projects(where: ProjectWhereInput! = {}, orderBy: [ProjectOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ProjectWhereUniqueInput): [Project!]
  projectsCount(where: ProjectWhereInput! = {}): Int
  galleryImage(where: GalleryImageWhereUniqueInput!): GalleryImage
  galleryImages(where: GalleryImageWhereInput! = {}, orderBy: [GalleryImageOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: GalleryImageWhereUniqueInput): [GalleryImage!]
  galleryImagesCount(where: GalleryImageWhereInput! = {}): Int
  locationItem(where: LocationItemWhereUniqueInput!): LocationItem
  locationItems(where: LocationItemWhereInput! = {}, orderBy: [LocationItemOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: LocationItemWhereUniqueInput): [LocationItem!]
  locationItemsCount(where: LocationItemWhereInput! = {}): Int
  floorPlan(where: FloorPlanWhereUniqueInput!): FloorPlan
  floorPlans(where: FloorPlanWhereInput! = {}, orderBy: [FloorPlanOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: FloorPlanWhereUniqueInput): [FloorPlan!]
  floorPlansCount(where: FloorPlanWhereInput! = {}): Int
  material(where: MaterialWhereUniqueInput!): Material
  materials(where: MaterialWhereInput! = {}, orderBy: [MaterialOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MaterialWhereUniqueInput): [Material!]
  materialsCount(where: MaterialWhereInput! = {}): Int
  fAQ(where: FAQWhereUniqueInput!): FAQ
  fAQS(where: FAQWhereInput! = {}, orderBy: [FAQOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: FAQWhereUniqueInput): [FAQ!]
  fAQSCount(where: FAQWhereInput! = {}): Int
  similarProject(where: SimilarProjectWhereUniqueInput!): SimilarProject
  similarProjects(where: SimilarProjectWhereInput! = {}, orderBy: [SimilarProjectOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SimilarProjectWhereUniqueInput): [SimilarProject!]
  similarProjectsCount(where: SimilarProjectWhereInput! = {}): Int
  callbackRequest(where: CallbackRequestWhereUniqueInput!): CallbackRequest
  callbackRequests(where: CallbackRequestWhereInput! = {}, orderBy: [CallbackRequestOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CallbackRequestWhereUniqueInput): [CallbackRequest!]
  callbackRequestsCount(where: CallbackRequestWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  graphql: KeystoneAdminUIGraphQL!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUIGraphQL {
  names: KeystoneAdminUIGraphQLNames!
}

type KeystoneAdminUIGraphQLNames {
  outputTypeName: String!
  whereInputName: String!
  whereUniqueInputName: String!
  createInputName: String!
  createMutationName: String!
  createManyMutationName: String!
  relateToOneForCreateInputName: String!
  relateToManyForCreateInputName: String!
  itemQueryName: String!
  listOrderName: String!
  listQueryCountName: String!
  listQueryName: String!
  updateInputName: String!
  updateMutationName: String!
  updateManyInputName: String!
  updateManyMutationName: String!
  relateToOneForUpdateInputName: String!
  relateToManyForUpdateInputName: String!
  deleteMutationName: String!
  deleteManyMutationName: String!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
