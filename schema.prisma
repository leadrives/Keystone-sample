// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  createdAt DateTime? @default(now())
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  String  @default("")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")

  @@index([authorId])
}

model Project {
  id                           String            @id @default(cuid())
  slug                         String            @unique @default("")
  heroImage_filesize           Int?
  heroImage_filename           String?
  mainHeading                  String            @default("")
  subHeading                   String            @default("")
  agents                       Agent[]           @relation("Agent_project")
  galleryMainHeading           String            @default("")
  galleryTitle                 String            @default("")
  galleryParagraph             String            @default("")
  galleryImages                GalleryImage[]    @relation("GalleryImage_project")
  amenitiesList                String            @default("")
  paymentPlanHeading           String            @default("")
  paymentPlanImage_filesize    Int?
  paymentPlanImage_filename    String?
  paymentPlanTitle             String            @default("")
  paymentPlanNumber            String            @default("")
  paymentPlanSuffix            String            @default("")
  paymentPlanDescription       String            @default("")
  paymentPlanBullets           String            @default("")
  locationHeading              String            @default("")
  locationSubheading           String            @default("")
  locationTitle                String            @default("")
  locationDescription          String            @default("")
  locationDescription2         String            @default("")
  locationBullets              String            @default("")
  locationMapImage_filesize    Int?
  locationMapImage_filename    String?
  developerTitle               String            @default("")
  developerParagraph1          String            @default("")
  developerParagraph2          String            @default("")
  developerRedParagraph        String            @default("")
  developerRedBoldText         String            @default("")
  developerImage1_filesize     Int?
  developerImage1_filename     String?
  developerImage2_filesize     Int?
  developerImage2_filename     String?
  contactHeading               String            @default("")
  contactProfilePic_filesize   Int?
  contactProfilePic_filename   String?
  contactProfileName           String            @default("")
  contactProfileDescription    String            @default("")
  contactBullets               String            @default("")
  contactMap_filesize          Int?
  contactMap_filename          String?
  faq                          FAQ[]             @relation("FAQ_project")
  amenitiesSectionHeading      String            @default("")
  amenitiesCards               AmenityCard[]     @relation("AmenityCard_project")
  amenityFilters               AmenityFilter[]   @relation("AmenityFilter_project")
  units                        Unit[]            @relation("Unit_project")
  unitFilters                  UnitFilter[]      @relation("UnitFilter_project")
  materials                    MaterialCard[]    @relation("MaterialCard_project")
  from_CallbackRequest_project CallbackRequest[] @relation("CallbackRequest_project")
}

model Agent {
  id             String   @id @default(cuid())
  name           String   @default("")
  photo_filesize Int?
  photo_filename String?
  project        Project? @relation("Agent_project", fields: [projectId], references: [id])
  projectId      String?  @map("project")

  @@index([projectId])
}

model GalleryImage {
  id             String   @id @default(cuid())
  image_filesize Int?
  image_filename String?
  project        Project? @relation("GalleryImage_project", fields: [projectId], references: [id])
  projectId      String?  @map("project")

  @@index([projectId])
}

model FAQ {
  id        String   @id @default(cuid())
  question  String   @default("")
  answer    String   @default("")
  project   Project? @relation("FAQ_project", fields: [projectId], references: [id])
  projectId String?  @map("project")

  @@index([projectId])
}

model AmenityCard {
  id             String   @id @default(cuid())
  title          String   @default("")
  description    String   @default("")
  image_filesize Int?
  image_filename String?
  categories     String   @default("")
  project        Project? @relation("AmenityCard_project", fields: [projectId], references: [id])
  projectId      String?  @map("project")

  @@index([projectId])
}

model AmenityFilter {
  id        String   @id @default(cuid())
  name      String   @default("")
  project   Project? @relation("AmenityFilter_project", fields: [projectId], references: [id])
  projectId String?  @map("project")

  @@index([projectId])
}

model Unit {
  id             String   @id @default(cuid())
  type           String   @default("")
  title          String   @default("")
  price          String   @default("")
  image_filesize Int?
  image_filename String?
  tag            String   @default("")
  cityView       Boolean  @default(false)
  sqft           String   @default("")
  project        Project? @relation("Unit_project", fields: [projectId], references: [id])
  projectId      String?  @map("project")

  @@index([projectId])
}

model UnitFilter {
  id        String   @id @default(cuid())
  name      String   @default("")
  project   Project? @relation("UnitFilter_project", fields: [projectId], references: [id])
  projectId String?  @map("project")

  @@index([projectId])
}

model MaterialCard {
  id                String   @id @default(cuid())
  title             String   @default("")
  description       String   @default("")
  image_filesize    Int?
  image_filename    String?
  document_filesize Int?
  document_filename String?
  project           Project? @relation("MaterialCard_project", fields: [projectId], references: [id])
  projectId         String?  @map("project")

  @@index([projectId])
}

model SiteSetting {
  id                  String       @id @default(cuid())
  logo_filesize       Int?
  logo_filename       String?
  footerLogo_filesize Int?
  footerLogo_filename String?
  footerSocialLinks   SocialLink[] @relation("SocialLink_siteSetting")
  footerCopyright     String       @default("")
}

model SocialLink {
  id            String       @id @default(cuid())
  name          String       @default("")
  icon_filesize Int?
  icon_filename String?
  url           String       @default("")
  siteSetting   SiteSetting? @relation("SocialLink_siteSetting", fields: [siteSettingId], references: [id])
  siteSettingId String?      @map("siteSetting")

  @@index([siteSettingId])
}

model CallbackRequest {
  id        String   @id @default(cuid())
  name      String   @default("")
  email     String   @default("")
  phone     String   @default("")
  pageUrl   String   @default("")
  ipAddress String   @default("")
  project   Project? @relation("CallbackRequest_project", fields: [projectId], references: [id])
  projectId String?  @map("project")

  @@index([projectId])
}
